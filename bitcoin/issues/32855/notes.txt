---------------------------
root cause and fix: https://github.com/bitcoin/bitcoin/pull/33063
After a fork() in a multithreaded program, the child can safely
call only async-signal-safe functions (see signal-safety(7))
until such time as it calls execv.

The standard library (std namespace) is not async-signal-safe. Also, throw, isn't.

There was an alternative implementation using readdir (#32529), but that isn't async-signal-safe either, and that implementation was still using throw.

So temporarily revert this feature.

A follow-up in the future can add it back, using only async-signal-safe functions, or by using a different approach.

Fixes #32524
Fixes #33015
Fixes #32855

For reference, a failure can manifest in the GCC debug mode:

While forking, a debug mode mutex is held (by any other thread).
The forked child tries to use the stdard libary before execv and deadlocks.
---------------------------
also in https://github.com/bitcoin/bitcoin/issues/32524

I assume the general code logic should be correct, but likely some exception/run-time error occurred then caused the intermittent issue.

So, I studied Popen::execute_process() in src/util/subprocess.h, one interesting statement caught my attention:

    subprocess_close(err_wr_pipe);// close child side of pipe, else get stuck in read below
    stream_.close_child_fds();
I notice that we didn't check the return code of the calling of subprocess_close()/close(), in many cases. Indeed, close() is a very safe call in general, but what if close() returns -1, but we didn't check it?

So, I hacked the subprocess.h by not calling subprocess_close(err_wr_pipe); on purpose in my macOS. Then I kind of reproduced the issue, at least it has very similar call stack on bitcoind, and on signer.py, it likely hangs on buffer = sys.stdin.read()

Not sure if this helps on the debugging process, but just want to share a thought. Maybe we should handle the return code of subprocess_close() to provide more hints when next it reproduces?

# the bitcoind process hangs on subprocess::util::read_atmost_n
(lldb) bt
* thread #7, name = 'b-httpworker.3'
  * frame #0: 0x000000018854e9b0 libsystem_kernel.dylib`read + 8
    frame #1: 0x0000000105dfb2b0 bitcoind`subprocess::util::read_atmost_n(fp=0x00000001ed6ac330, buf="", read_upto=1024) at subprocess.h:437:24
    frame #2: 0x0000000105e06444 bitcoind`subprocess::Popen::execute_process(this=0x000000016b5944e0) at subprocess.h:1250:24
    frame #3: 0x0000000105e05b68 bitcoind`subprocess::Popen::Popen<subprocess::input, subprocess::output, subprocess::error, subprocess::close_fds>(this=0x000000016b5944e0, cmd_args="/opt/homebrew/opt/python@3.13/bin/python3.13 /Users/<user>/data/code/bitcoin/test/functional/mocks/signer.py enumerate", args=0x000000016b5944d8, args=0x000000016b5944d0, args=0x000000016b5944c4, args=0x000000016b5944c3) at subprocess.h:964:5
    frame #4: 0x0000000105df8ac8 bitcoind`subprocess::Popen::Popen<subprocess::input, subprocess::output, subprocess::error, subprocess::close_fds>(this=0x000000016b5944e0, cmd_args="/opt/homebrew/opt/python@3.13/bin/python3.13 /Users/<user>/data/code/bitcoin/test/functional/mocks/signer.py enumerate", args=0x000000016b5944d8, args=0x000000016b5944d0, args=0x000000016b5944c4, args=0x000000016b5944c3) at subprocess.h:957:3
    frame #5: 0x0000000105df8360 bitcoind`RunCommandParseJSON(str_command="/opt/homebrew/opt/python@3.13/bin/python3.13 /Users/<user>/data/code/bitcoin/test/functional/mocks/signer.py enumerate", str_std_in="") at run_command.cpp:27:14
    frame #6: 0x0000000105e1e030 bitcoind`ExternalSigner::Enumerate(command="/opt/homebrew/opt/python@3.13/bin/python3.13 /Users/<user>/data/code/bitcoin/test/functional/mocks/signer.py", signers=size=0, chain="regtest") at external_signer.cpp:28:29
    frame #7: 0x0000000105410f44 bitcoind`enumeratesigners()::$_0::operator()(this=0x000000016b5955b8, self=0x000000016b595598, request=0x000000016b5958b0) const at external_signer.cpp:51:17
    frame #8: 0x0000000105410d20 bitcoind`decltype(std::declval<enumeratesigners()::$_0&>()(std::declval<RPCHelpMan const&>(), std::declval<JSONRPCRequest const&>())) std::__1::__invoke[abi:v160006]<enumeratesigners()::$_0&, RPCHelpMan const&, JSONRPCRequest const&>(__f=0x000000016b5955b8, __args=0x000000016b595598, __args=0x000000016b5958b0) at invoke.h:394:23
    frame #9: 0x0000000105410c48 bitcoind`UniValue std::__1::__invoke_void_return_wrapper<UniValue, false>::__call<enumeratesigners()::$_0&, RPCHelpMan const&, JSONRPCRequest const&>(__args=0x000000016b5955b8, __args=0x000000016b595598, __args=0x000000016b5958b0) at invoke.h:478:16
    frame #10: 0x0000000105410bd4 bitcoind`std::__1::__function::__alloc_func<enumeratesigners()::$_0, std::__1::allocator<enumeratesigners()::$_0>, UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()[abi:v160006](this=0x000000016b5955b8, __arg=0x000000016b595598, __arg=0x000000016b5958b0) at function.h:185:16
    frame #11: 0x000000010540e58c bitcoind`std::__1::__function::__func<enumeratesigners()::$_0, std::__1::allocator<enumeratesigners()::$_0>, UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(this=0x000000016b5955b0, __arg=0x000000016b595598, __arg=0x000000016b5958b0) at function.h:356:12
    frame #12: 0x0000000105ece8dc bitcoind`std::__1::__function::__value_func<UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()[abi:v160006](this=0x000000016b5955b0, __args=0x000000016b595598, __args=0x000000016b5958b0) const at function.h:510:16
    frame #13: 0x0000000105eb83dc bitcoind`std::__1::function<UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(this= Lambda in File external_signer.cpp at Line 44, __arg=0x000000016b595598, __arg=0x000000016b5958b0) const at function.h:1156:12
    frame #14: 0x0000000105eb6ed4 bitcoind`RPCHelpMan::HandleRequest(this=0x000000016b595598, request=0x000000016b5958b0) const at util.cpp:663:20
    frame #15: 0x0000000105368b04 bitcoind`CRPCCommand::CRPCCommand(this=0x000000010642b4c8, request=0x000000016b5958b0, result=0x000000016b595e00, (null)=true)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const at server.h:101:91
    frame #16: 0x0000000105368a6c bitcoind`decltype(std::declval<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&>()(std::declval<JSONRPCRequest const&>(), std::declval<UniValue&>(), std::declval<bool>())) std::__1::__invoke[abi:v160006]<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(__f=0x000000010642b4c8, __args=0x000000016b5958b0, __args=0x000000016b595e00, __args=0x000000016b5957d7) at invoke.h:394:23
    frame #17: 0x0000000105368980 bitcoind`bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(__args=0x000000010642b4c8, __args=0x000000016b5958b0, __args=0x000000016b595e00, __args=0x000000016b5957d7) at invoke.h:478:16
    frame #18: 0x0000000105368900 bitcoind`std::__1::__function::__alloc_func<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()[abi:v160006](this=0x000000010642b4c8, __arg=0x000000016b5958b0, __arg=0x000000016b595e00, __arg=0x000000016b5957d7) at function.h:185:16
    frame #19: 0x0000000105366298 bitcoind`std::__1::__function::__func<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(this=0x000000010642b4c0, __arg=0x000000016b5958b0, __arg=0x000000016b595e00, __arg=0x000000016b5957d7) at function.h:356:12
    frame #20: 0x00000001051a3f0c bitcoind`std::__1::__function::__value_func<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()[abi:v160006](this=0x000000010642b4c0, __args=0x000000016b5958b0, __args=0x000000016b595e00, __args=0x000000016b5957d7) const at function.h:510:16
    frame #21: 0x00000001051a3df0 bitcoind`std::__1::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(this= Function = enumeratesigners() , __arg=0x000000016b5958b0, __arg=0x000000016b595e00, __arg=true) const at function.h:1156:12
    frame #22: 0x00000001055f51cc bitcoind`ExecuteCommand(command=0x000000010642b490, request=0x000000016b596b10, result=0x000000016b595e00, last_handler=true) at server.cpp:514:20
    frame #23: 0x00000001055da63c bitcoind`ExecuteCommands(commands=size=1, request=0x000000016b596b10, result=0x000000016b595e00) at server.cpp:481:13
    frame #24: 0x00000001055da378 bitcoind`CRPCTable::execute(this=0x0000000106431b88, request=0x000000016b596b10) const at server.cpp:501:13
    frame #25: 0x00000001055d9e38 bitcoind`JSONRPCExec(jreq=0x000000016b596b10, catch_errors=true) at server.cpp:357:31
    frame #26: 0x0000000104ce4b10 bitcoind`HTTPReq_JSONRPC(context=0x0000600001be2ac8, req=0x00006000015e2e40) at httprpc.cpp:204:21
    frame #27: 0x0000000104ce42c4 bitcoind`StartHTTPRPC(std::__1::any const&)::$_0::operator()(this=0x0000600001be2ac8, req=0x00006000015e2e40, (null)="") const at httprpc.cpp:376:80
    frame #28: 0x0000000104ce4250 bitcoind`decltype(std::declval<StartHTTPRPC(std::__1::any const&)::$_0&>()(std::declval<HTTPRequest*>(), std::declval<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&>())) std::__1::__invoke[abi:v160006]<StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&>(__f=0x0000600001be2ac8, __args=0x000000016b596e10, __args="") at invoke.h:394:23
    frame #29: 0x0000000104ce4170 bitcoind`bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&>(__args=0x0000600001be2ac8, __args=0x000000016b596e10, __args="") at invoke.h:478:16
    frame #30: 0x0000000104ce40f8 bitcoind`std::__1::__function::__alloc_func<StartHTTPRPC(std::__1::any const&)::$_0, std::__1::allocator<StartHTTPRPC(std::__1::any const&)::$_0>, bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)>::operator()[abi:v160006](this=0x0000600001be2ac8, __arg=0x000000016b596e10, __arg="") at function.h:185:16
    frame #31: 0x0000000104ce1adc bitcoind`std::__1::__function::__func<StartHTTPRPC(std::__1::any const&)::$_0, std::__1::allocator<StartHTTPRPC(std::__1::any const&)::$_0>, bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)>::operator()(this=0x0000600001be2ac0, __arg=0x000000016b596e10, __arg="") at function.h:356:12
    frame #32: 0x0000000104d04198 bitcoind`std::__1::__function::__value_func<bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)>::operator()[abi:v160006](this=0x00006000036e6878, __args=0x000000016b596e10, __args="") const at function.h:510:16
    frame #33: 0x0000000104d0408c bitcoind`std::__1::function<bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)>::operator()(this= Lambda in File httprpc.cpp at Line 376, __arg=0x00006000015e2e40, __arg="") const at function.h:1156:12
    frame #34: 0x0000000104d03cf0 bitcoind`HTTPWorkItem::operator()(this=0x00006000036e6850) at httpserver.cpp:62:9
    frame #35: 0x0000000104d17560 bitcoind`WorkQueue<HTTPClosure>::Run(this=0x00006000022e4000) at httpserver.cpp:117:13
    frame #36: 0x0000000104cf099c bitcoind`HTTPWorkQueueRun(queue=0x00006000022e4000, worker_num=3) at httpserver.cpp:419:12
    frame #37: 0x0000000104d14498 bitcoind`decltype(std::declval<void (*)(WorkQueue<HTTPClosure>*, int)>()(std::declval<WorkQueue<HTTPClosure>*>(), std::declval<int>())) std::__1::__invoke[abi:v160006]<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>(__f=0x00006000015e81c8, __args=0x00006000015e81d0, __args=0x00006000015e81d8) at invoke.h:394:23
    frame #38: 0x0000000104d14354 bitcoind`void std::__1::__thread_execute[abi:v160006]<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int, 2ul, 3ul>(__t=size=4, (null)=__tuple_indices<2UL, 3UL> @ 0x000000016b596f77) at thread:282:5
    frame #39: 0x0000000104d13310 bitcoind`void* std::__1::__thread_proxy[abi:v160006]<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>>(__vp=0x00006000015e81c0) at thread:293:5
    frame #40: 0x000000018858f2e4 libsystem_pthread.dylib`_pthread_start + 136
(lldb) 

# the signer.py process likely hangs on buffer = sys.stdin.read()
(lldb) process attach --pid 31835
Process 31835 stopped
* thread #1, queue = 'com.apple.main-thread', stop reason = signal SIGSTOP
    frame #0: 0x000000018854e9b0 libsystem_kernel.dylib`read + 8
libsystem_kernel.dylib`read:
->  0x18854e9b0 <+8>:  b.lo   0x18854e9d0               ; <+40>
    0x18854e9b4 <+12>: pacibsp 
    0x18854e9b8 <+16>: stp    x29, x30, [sp, #-0x10]!
    0x18854e9bc <+20>: mov    x29, sp
Executable module set to "/opt/homebrew/Cellar/python@3.13/3.13.3_1/Frameworks/Python.framework/Versions/3.13/Resources/Python.app/Contents/MacOS/Python".
Architecture set to: arm64-apple-macosx-.
(lldb) bt
* thread #1, queue = 'com.apple.main-thread', stop reason = signal SIGSTOP
  * frame #0: 0x000000018854e9b0 libsystem_kernel.dylib`read + 8
    frame #1: 0x0000000102bc9034 Python`_Py_read + 108
    frame #2: 0x0000000102bf6440 Python`_io_FileIO_readall_impl + 304
    frame #3: 0x0000000102a6cac8 Python`cfunction_vectorcall_NOARGS + 100
    frame #4: 0x0000000102bfc290 Python`_io__Buffered_read + 736
    frame #5: 0x0000000102a1c514 Python`method_vectorcall_FASTCALL + 108
    frame #6: 0x0000000102a119b8 Python`PyObject_VectorcallMethod + 148
    frame #7: 0x0000000102c058d0 Python`_io_TextIOWrapper_read + 192
    frame #8: 0x0000000102a1c514 Python`method_vectorcall_FASTCALL + 108
    frame #9: 0x0000000102a103a0 Python`PyObject_Vectorcall + 92
    frame #10: 0x0000000102b387d0 Python`_PyEval_EvalFrameDefault + 6876
    frame #11: 0x0000000102b36a78 Python`PyEval_EvalCode + 200
    frame #12: 0x0000000102ba7078 Python`run_eval_code_obj + 104
    frame #13: 0x0000000102ba6ac0 Python`run_mod + 168
    frame #14: 0x0000000102ba51a0 Python`pyrun_file + 164
    frame #15: 0x0000000102ba44dc Python`_PyRun_SimpleFileObject + 256
    frame #16: 0x0000000102ba4114 Python`_PyRun_AnyFileObject + 80
    frame #17: 0x0000000102bcba2c Python`pymain_run_file_obj + 164
    frame #18: 0x0000000102bcb6d8 Python`pymain_run_file + 76
    frame #19: 0x0000000102bca948 Python`Py_RunMain + 968
    frame #20: 0x0000000102bcaf44 Python`pymain_main + 304
    frame #21: 0x0000000102bcafe4 Python`Py_BytesMain + 40
    frame #22: 0x000000018820c274 dyld`start + 2840
(lldb) 
---------------------------
---------------------------
clang++ -I/Users/tnnd/data/code/bitcoin/src -std=c++11 -g3 -O0 test_sub.cpp
---------------------------
Thanks for @Sjors ' quick clue on the potential issue. I searched the CI output and agree that it's likely due to the calling of

return RunCommandParseJSON(m_command + " --fingerprint " + m_fingerprint + NetworkArg() + " getdescriptors --account " + strprintf("%d", account)); 
which requires a read from stdin in test/functional/mocks/signer.py

if not sys.stdin.isatty():  # on my local mac test, this is not from terminal so it will try to run read()
    buffer = sys.stdin.read() # this one read an empty string from stdin
Likely the stdin is missing in this particular run and caused test/functional/mocks/signer.py to hang. Since this mock/signer.py is very isolated from regular python test framework so it's hard to add debug traces that can be caught by CI process. I would propose adding a log in C++ code, like this:

        WalletLogPrintf("Begin of GetDescriptors"); // add debug log
        UniValue signer_res = signer->GetDescriptors(account);
        WalletLogPrintf("End of GetDescriptors"); // add debug log
This is not ideal, but it will give a good idea on what goes wrong next time it happens.

More details on how I identified the problematic code, I searched the full CI output:

[10:05:43.853]  node1 2025-06-26T13:45:43.128865Z [httpworker.8] [wallet/wallet.h:931] [WalletLogPrintf] [hww_disconnect] Setting minversion to 169900
[10:05:43.853]  node1 2025-06-26T13:45:43.128982Z [httpworker.8] [wallet/sqlite.cpp:55] [TraceSqlCallback] [walletdb:trace] [/ci_container_base/ci/scratch/test_runner/test_runner_₿_🏃_20250626_133646/wallet_signer_216/node1/regtest/hww_disconnect/wallet.dat] SQLite Statement: INSERT or REPLACE into main values(?, ?)
[10:05:43.853]  node1 2025-06-26T13:45:43.129258Z [httpworker.8] [wallet/sqlite.cpp:55] [TraceSqlCallback] [walletdb:trace] [/ci_container_base/ci/scratch/test_runner/test_runner_₿_🏃_20250626_133646/wallet_signer_216/node1/regtest/hww_disconnect/wallet.dat] SQLite Statement: INSERT or REPLACE into main values(?, ?)
Then there is no more logs for thread: httpworker.8, which indicates a hanging issue. However, from a good test, the traces would show.

walletInstance->SetMinVersion(FEATURE_LATEST); // in CWallet::Create , this will generate following log:
2025-07-10T16:13:48.468246Z [httpworker.7] [wallet/wallet.h:942] [WalletLogPrintf] [hww_disconnect] Setting minversion to 169900
2025-07-10T16:13:48.468268Z [httpworker.7] [wallet/sqlite.cpp:55] [TraceSqlCallback] [walletdb:trace] [/tmp/test_runner_₿_🏃_20250710_121343/wallet_signer_0/node1/regtest/hww_disconnect/wallet.dat] SQLite Statement: INSERT or REPLACE into main values(?, ?)

walletInstance->InitWalletFlags(wallet_creation_flags | WALLET_FLAG_LAST_HARDENED_XPUB_CACHED); // in CWallet::Create, this one will generate following logs
2025-07-10T16:13:48.468307Z [httpworker.7] [wallet/sqlite.cpp:55] [TraceSqlCallback] [walletdb:trace] [/tmp/test_runner_₿_🏃_20250710_121343/wallet_signer_0/node1/regtest/hww_disconnect/wallet.dat] SQLite Statement: INSERT or REPLACE into main values(?, ?)

UniValue signer_res = signer->GetDescriptors(account); // in CWallet::SetupDescriptorScriptPubKeyMans(), this one requires a read from stdin

if (!batch.TxnBegin()) throw std::runtime_error("Error: cannot create db transaction for descriptors import"); // in CWallet::SetupDescriptorScriptPubKeyMans(), this one will generate following log
2025-07-10T16:13:48.534299Z [httpworker.7] [wallet/sqlite.cpp:55] [TraceSqlCallback] [walletdb:trace] [/tmp/test_runner_₿_🏃_20250710_121343/wallet_signer_0/node1/regtest/hww_disconnect/wallet.dat] SQLite Statement: BEGIN TRANSACTION
The python statement that causes wallet creation failure is:
self.nodes[1].createwallet(wallet_name='hww_disconnect', disable_private_keys=True, external_signer=True) 
---------------------------
/usr/local/bin/python3.9 /Users/tnnd/data/code/bitcoin/test/functional/mocks/signer.py --fingerprint 00000001 --chain regtest getdescriptors --account 0

(lldb) bt
* thread #14, name = 'b-httpworker.10', stop reason = step in
  * frame #0: 0x00000001019cc28c bitcoind`RunCommandParseJSON(str_command="/usr/local/bin/python3.9 /Users/tnnd/data/code/bitcoin/test/functional/mocks/signer.py --fingerprint 00000001 --chain regtest getdescriptors --account 0", str_std_in="") at run_command.cpp:21:14
    frame #1: 0x00000001019f2b34 bitcoind`ExternalSigner::GetDescriptors(this=0x000000016fd927c8, account=0) at external_signer.cpp:70:12
    frame #2: 0x0000000101762fd4 bitcoind`wallet::CWallet::SetupDescriptorScriptPubKeyMans(this=0x0000000117808200) at wallet.cpp:3581:39
    frame #3: 0x000000010175facc bitcoind`wallet::CWallet::Create(context=0x00006000024e0008, name="hww_disconnect", database=nullptr, wallet_creation_flags=55834574848, error=0x000000016fd94850, warnings=size=0) at wallet.cpp:2897:29
    frame #4: 0x000000010175e9ac bitcoind`wallet::CreateWallet(context=0x00006000024e0008, name="hww_disconnect", load_on_start= Has Value=false , options=0x000000016fd94938, status=0x000000016fd94884, error=0x000000016fd94850, warnings=size=0) at wallet.cpp:417:39
    frame #5: 0x0000000101645a60 bitcoind`wallet::createwallet()::$_0::operator()(this=0x000000016fd95028, self=0x000000016fd95008, request=0x000000016fd952c0) const at wallet.cpp:423:45
    frame #6: 0x00000001016454c0 bitcoind`decltype(std::declval<wallet::createwallet()::$_0&>()(std::declval<RPCHelpMan const&>(), std::declval<JSONRPCRequest const&>())) std::__1::__invoke[abi:v160006]<wallet::createwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&>(__f=0x000000016fd95028, __args=0x000000016fd95008, __args=0x000000016fd952c0) at invoke.h:394:23
    frame #7: 0x00000001016453e8 bitcoind`UniValue std::__1::__invoke_void_return_wrapper<UniValue, false>::__call<wallet::createwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&>(__args=0x000000016fd95028, __args=0x000000016fd95008, __args=0x000000016fd952c0) at invoke.h:478:16
    frame #8: 0x0000000101645374 bitcoind`std::__1::__function::__alloc_func<wallet::createwallet()::$_0, std::__1::allocator<wallet::createwallet()::$_0>, UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()[abi:v160006](this=0x000000016fd95028, __arg=0x000000016fd95008, __arg=0x000000016fd952c0) at function.h:185:16
    frame #9: 0x0000000101642d2c bitcoind`std::__1::__function::__func<wallet::createwallet()::$_0, std::__1::allocator<wallet::createwallet()::$_0>, UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(this=0x000000016fd95020, __arg=0x000000016fd95008, __arg=0x000000016fd952c0) at function.h:356:12
    frame #10: 0x0000000101aa28ec bitcoind`std::__1::__function::__value_func<UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()[abi:v160006](this=0x000000016fd95020, __args=0x000000016fd95008, __args=0x000000016fd952c0) const at function.h:510:16
    frame #11: 0x0000000101a8c3ec bitcoind`std::__1::function<UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(this= Lambda in File wallet.cpp at Line 379, __arg=0x000000016fd95008, __arg=0x000000016fd952c0) const at function.h:1156:12
    frame #12: 0x0000000101a8aee4 bitcoind`RPCHelpMan::HandleRequest(this=0x000000016fd95008, request=0x000000016fd952c0) const at util.cpp:663:20
    frame #13: 0x0000000100f3cac0 bitcoind`CRPCCommand::CRPCCommand(this=0x0000000102003298, request=0x000000016fd952c0, result=0x000000016fd95e00, (null)=true)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const at server.h:101:91
    frame #14: 0x0000000100f3ca28 bitcoind`decltype(std::declval<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&>()(std::declval<JSONRPCRequest const&>(), std::declval<UniValue&>(), std::declval<bool>())) std::__1::__invoke[abi:v160006]<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(__f=0x0000000102003298, __args=0x000000016fd952c0, __args=0x000000016fd95e00, __args=0x000000016fd95247) at invoke.h:394:23
    frame #15: 0x0000000100f3c93c bitcoind`bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(__args=0x0000000102003298, __args=0x000000016fd952c0, __args=0x000000016fd95e00, __args=0x000000016fd95247) at invoke.h:478:16
    frame #16: 0x0000000100f3c8bc bitcoind`std::__1::__function::__alloc_func<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()[abi:v160006](this=0x0000000102003298, __arg=0x000000016fd952c0, __arg=0x000000016fd95e00, __arg=0x000000016fd95247) at function.h:185:16
    frame #17: 0x0000000100f3a254 bitcoind`std::__1::__function::__func<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(this=0x0000000102003290, __arg=0x000000016fd952c0, __arg=0x000000016fd95e00, __arg=0x000000016fd95247) at function.h:356:12
    frame #18: 0x0000000100d77ec8 bitcoind`std::__1::__function::__value_func<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()[abi:v160006](this=0x0000000102003290, __args=0x000000016fd952c0, __args=0x000000016fd95e00, __args=0x000000016fd95247) const at function.h:510:16
    frame #19: 0x0000000100d77dac bitcoind`std::__1::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(this= Function = wallet::createwallet() , __arg=0x000000016fd952c0, __arg=0x000000016fd95e00, __arg=true) const at function.h:1156:12
    frame #20: 0x00000001014a1b94 bitcoind`wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs(this=0x00006000033e0a48, request=0x000000016fd958b0, result=0x000000016fd95e00, last_handler=true)::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const at interfaces.cpp:564:24
    frame #21: 0x00000001014a1ac0 bitcoind`decltype(std::declval<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&>()(std::declval<JSONRPCRequest const&>(), std::declval<UniValue&>(), std::declval<bool>())) std::__1::__invoke[abi:v160006]<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(__f=0x00006000033e0a48, __args=0x000000016fd958b0, __args=0x000000016fd95e00, __args=0x000000016fd95597) at invoke.h:394:23
    frame #22: 0x00000001014a19d4 bitcoind`bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(__args=0x00006000033e0a48, __args=0x000000016fd958b0, __args=0x000000016fd95e00, __args=0x000000016fd95597) at invoke.h:478:16
    frame #23: 0x00000001014a1954 bitcoind`std::__1::__function::__alloc_func<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()[abi:v160006](this=0x00006000033e0a48, __arg=0x000000016fd958b0, __arg=0x000000016fd95e00, __arg=0x000000016fd95597) at function.h:185:16
    frame #24: 0x000000010149f2e4 bitcoind`std::__1::__function::__func<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(this=0x00006000033e0a40, __arg=0x000000016fd958b0, __arg=0x000000016fd95e00, __arg=0x000000016fd95597) at function.h:356:12
    frame #25: 0x0000000100d77ec8 bitcoind`std::__1::__function::__value_func<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()[abi:v160006](this=0x00006000033e0a40, __args=0x000000016fd958b0, __args=0x000000016fd95e00, __args=0x000000016fd95597) const at function.h:510:16
    frame #26: 0x0000000100d77dac bitcoind`std::__1::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(this= Lambda in File interfaces.cpp at Line 561, __arg=0x000000016fd958b0, __arg=0x000000016fd95e00, __arg=true) const at function.h:1156:12
    frame #27: 0x0000000100d77be0 bitcoind`node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(this=0x00006000033e0bc0, request=0x000000016fd958b0, result=0x000000016fd95e00, last_handler=true)::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const at interfaces.cpp:513:24
    frame #28: 0x0000000100d77b18 bitcoind`decltype(std::declval<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&>()(std::declval<JSONRPCRequest const&>(), std::declval<UniValue&>(), std::declval<bool>())) std::__1::__invoke[abi:v160006]<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(__f=0x00006000033e0bc0, __args=0x000000016fd958b0, __args=0x000000016fd95e00, __args=0x000000016fd957d7) at invoke.h:394:23
    frame #29: 0x0000000100d77a2c bitcoind`bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(__args=0x00006000033e0bc0, __args=0x000000016fd958b0, __args=0x000000016fd95e00, __args=0x000000016fd957d7) at invoke.h:478:16
    frame #30: 0x0000000100d779ac bitcoind`std::__1::__function::__alloc_func<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()[abi:v160006](this=0x00006000033e0bc0, __arg=0x000000016fd958b0, __arg=0x000000016fd95e00, __arg=0x000000016fd957d7) at function.h:185:16
    frame #31: 0x0000000100d7531c bitcoind`std::__1::__function::__func<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(this=0x00006000033e0bb8, __arg=0x000000016fd958b0, __arg=0x000000016fd95e00, __arg=0x000000016fd957d7) at function.h:356:12
    frame #32: 0x0000000100d77ec8 bitcoind`std::__1::__function::__value_func<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()[abi:v160006](this=0x00006000033e0bb8, __args=0x000000016fd958b0, __args=0x000000016fd95e00, __args=0x000000016fd957d7) const at function.h:510:16
    frame #33: 0x0000000100d77dac bitcoind`std::__1::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(this= Lambda in File interfaces.cpp at Line 510, __arg=0x000000016fd958b0, __arg=0x000000016fd95e00, __arg=true) const at function.h:1156:12
    frame #34: 0x00000001011c9188 bitcoind`ExecuteCommand(command=0x00006000033e0b88, request=0x000000016fd96b10, result=0x000000016fd95e00, last_handler=true) at server.cpp:514:20
    frame #35: 0x00000001011ae5f8 bitcoind`ExecuteCommands(commands=size=1, request=0x000000016fd96b10, result=0x000000016fd95e00) at server.cpp:481:13
    frame #36: 0x00000001011ae334 bitcoind`CRPCTable::execute(this=0x0000000102005b88, request=0x000000016fd96b10) const at server.cpp:501:13
    frame #37: 0x00000001011addf4 bitcoind`JSONRPCExec(jreq=0x000000016fd96b10, catch_errors=true) at server.cpp:357:31
    frame #38: 0x00000001008b8acc bitcoind`HTTPReq_JSONRPC(context=0x00006000013e8098, req=0x0000600001df7100) at httprpc.cpp:204:21
    frame #39: 0x00000001008b8280 bitcoind`StartHTTPRPC(std::__1::any const&)::$_0::operator()(this=0x00006000013e8098, req=0x0000600001df7100, (null)="") const at httprpc.cpp:376:80
    frame #40: 0x00000001008b820c bitcoind`decltype(std::declval<StartHTTPRPC(std::__1::any const&)::$_0&>()(std::declval<HTTPRequest*>(), std::declval<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&>())) std::__1::__invoke[abi:v160006]<StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&>(__f=0x00006000013e8098, __args=0x000000016fd96e10, __args="") at invoke.h:394:23
    frame #41: 0x00000001008b812c bitcoind`bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&>(__args=0x00006000013e8098, __args=0x000000016fd96e10, __args="") at invoke.h:478:16
    frame #42: 0x00000001008b80b4 bitcoind`std::__1::__function::__alloc_func<StartHTTPRPC(std::__1::any const&)::$_0, std::__1::allocator<StartHTTPRPC(std::__1::any const&)::$_0>, bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)>::operator()[abi:v160006](this=0x00006000013e8098, __arg=0x000000016fd96e10, __arg="") at function.h:185:16
    frame #43: 0x00000001008b5a98 bitcoind`std::__1::__function::__func<StartHTTPRPC(std::__1::any const&)::$_0, std::__1::allocator<StartHTTPRPC(std::__1::any const&)::$_0>, bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)>::operator()(this=0x00006000013e8090, __arg=0x000000016fd96e10, __arg="") at function.h:356:12
    frame #44: 0x00000001008d8154 bitcoind`std::__1::__function::__value_func<bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)>::operator()[abi:v160006](this=0x0000600003ee8258, __args=0x000000016fd96e10, __args="") const at function.h:510:16
    frame #45: 0x00000001008d8048 bitcoind`std::__1::function<bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)>::operator()(this= Lambda in File httprpc.cpp at Line 376, __arg=0x0000600001df7100, __arg="") const at function.h:1156:12
    frame #46: 0x00000001008d7cac bitcoind`HTTPWorkItem::operator()(this=0x0000600003ee8230) at httpserver.cpp:62:9
    frame #47: 0x00000001008eb51c bitcoind`WorkQueue<HTTPClosure>::Run(this=0x0000600002aec000) at httpserver.cpp:117:13
    frame #48: 0x00000001008c4958 bitcoind`HTTPWorkQueueRun(queue=0x0000600002aec000, worker_num=10) at httpserver.cpp:419:12
    frame #49: 0x00000001008e8454 bitcoind`decltype(std::declval<void (*)(WorkQueue<HTTPClosure>*, int)>()(std::declval<WorkQueue<HTTPClosure>*>(), std::declval<int>())) std::__1::__invoke[abi:v160006]<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>(__f=0x0000600001dec2a8, __args=0x0000600001dec2b0, __args=0x0000600001dec2b8) at invoke.h:394:23
    frame #50: 0x00000001008e8310 bitcoind`void std::__1::__thread_execute[abi:v160006]<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int, 2ul, 3ul>(__t=size=4, (null)=__tuple_indices<2UL, 3UL> @ 0x000000016fd96f77) at thread:282:5
    frame #51: 0x00000001008e72cc bitcoind`void* std::__1::__thread_proxy[abi:v160006]<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>>(__vp=0x0000600001dec2a0) at thread:293:5
    frame #52: 0x000000018858f2e4 libsystem_pthread.dylib`_pthread_start + 136
---------------------------
first INSERT or REPLACE
(lldb) print DEBUG_STR
(const char *) $0 = 0x000000011820f8e0 "INSERT or REPLACE into main values(?, ?)"
(lldb) b sqlite.cpp:59
Breakpoint 1: where = bitcoind`wallet::TraceSqlCallback(unsigned int, void*, void*, void*) + 248 at sqlite.cpp:59:18, address = 0x00000001013800e0
(lldb) b sqlite.cpp:62
Breakpoint 2: where = bitcoind`wallet::TraceSqlCallback(unsigned int, void*, void*, void*) + 312 at sqlite.cpp:62:18, address = 0x0000000101380120
(lldb) c
Process 1530 resuming
Process 1530 stopped
* thread #14, name = 'b-httpworker.10', stop reason = breakpoint 1.1
    frame #0: 0x00000001013800e0 bitcoind`wallet::TraceSqlCallback(code=1, context=0x00006000029c5aa0, param1=0x0000000118205f90, param2=0x000000011820f8e0) at sqlite.cpp:59:18
(lldb) bt
* thread #14, name = 'b-httpworker.10', stop reason = breakpoint 1.1
  * frame #0: 0x00000001013800e0 bitcoind`wallet::TraceSqlCallback(code=1, context=0x00006000029c5aa0, param1=0x0000000118205f90, param2=0x000000011820f8e0) at sqlite.cpp:59:18
    frame #1: 0x000000018f7ec4f8 libsqlite3.dylib`sqlite3VdbeExec + 32220
    frame #2: 0x000000018f7e3de4 libsqlite3.dylib`sqlite3_step + 964
    frame #3: 0x0000000101382214 bitcoind`wallet::SQLiteBatch::WriteKey(this=0x0000600002edd0e0, key=0x000000017015e570, value=0x000000017015e550, overwrite=true) at sqlite.cpp:513:15
    frame #4: 0x000000010148d6f0 bitcoind`bool wallet::DatabaseBatch::Write<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, int>(this=0x0000600002edd0e0, key="version", value=0x0000000101a38708, fOverwrite=true) at db.h:95:16
    frame #5: 0x000000010148bae0 bitcoind`wallet::WalletBatch::LoadWallet(this=0x000000017015e870, pwallet=0x000000013386b400) at walletdb.cpp:1192:18
    frame #6: 0x00000001013aaaf8 bitcoind`wallet::CWallet::LoadWallet(this=0x000000013386b400) at wallet.cpp:2266:58
    frame #7: 0x000000010139331c bitcoind`wallet::CWallet::Create(context=0x00006000034c10a8, name="hww_disconnect", database=nullptr, wallet_creation_flags=55834574848, error=0x0000000170160850, warnings=size=0) at wallet.cpp:2815:47
    frame #8: 0x00000001013929ac bitcoind`wallet::CreateWallet(context=0x00006000034c10a8, name="hww_disconnect", load_on_start= Has Value=false , options=0x0000000170160938, status=0x0000000170160884, error=0x0000000170160850, warnings=size=0) at wallet.cpp:416:39
    frame #9: 0x0000000101279a60 bitcoind`wallet::createwallet()::$_0::operator()(this=0x0000000170161028, self=0x0000000170161008, request=0x00000001701612c0) const at wallet.cpp:423:45
    frame #10: 0x00000001012794c0 bitcoind`decltype(std::declval<wallet::createwallet()::$_0&>()(std::declval<RPCHelpMan const&>(), std::declval<JSONRPCRequest const&>())) std::__1::__invoke[abi:v160006]<wallet::createwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&>(__f=0x0000000170161028, __args=0x0000000170161008, __args=0x00000001701612c0) at invoke.h:394:23
    frame #11: 0x00000001012793e8 bitcoind`UniValue std::__1::__invoke_void_return_wrapper<UniValue, false>::__call<wallet::createwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&>(__args=0x0000000170161028, __args=0x0000000170161008, __args=0x00000001701612c0) at invoke.h:478:16
    frame #12: 0x0000000101279374 bitcoind`std::__1::__function::__alloc_func<wallet::createwallet()::$_0, std::__1::allocator<wallet::createwallet()::$_0>, UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()[abi:v160006](this=0x0000000170161028, __arg=0x0000000170161008, __arg=0x00000001701612c0) at function.h:185:16
    frame #13: 0x0000000101276d2c bitcoind`std::__1::__function::__func<wallet::createwallet()::$_0, std::__1::allocator<wallet::createwallet()::$_0>, UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(this=0x0000000170161020, __arg=0x0000000170161008, __arg=0x00000001701612c0) at function.h:356:12
    frame #14: 0x00000001016d68ec bitcoind`std::__1::__function::__value_func<UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()[abi:v160006](this=0x0000000170161020, __args=0x0000000170161008, __args=0x00000001701612c0) const at function.h:510:16
    frame #15: 0x00000001016c03ec bitcoind`std::__1::function<UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(this= Lambda in File wallet.cpp at Line 379, __arg=0x0000000170161008, __arg=0x00000001701612c0) const at function.h:1156:12
    frame #16: 0x00000001016beee4 bitcoind`RPCHelpMan::HandleRequest(this=0x0000000170161008, request=0x00000001701612c0) const at util.cpp:663:20
    frame #17: 0x0000000100b70ac0 bitcoind`CRPCCommand::CRPCCommand(this=0x0000000101c37298, request=0x00000001701612c0, result=0x0000000170161e00, (null)=true)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const at server.h:101:91
    frame #18: 0x0000000100b70a28 bitcoind`decltype(std::declval<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&>()(std::declval<JSONRPCRequest const&>(), std::declval<UniValue&>(), std::declval<bool>())) std::__1::__invoke[abi:v160006]<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(__f=0x0000000101c37298, __args=0x00000001701612c0, __args=0x0000000170161e00, __args=0x0000000170161247) at invoke.h:394:23
    frame #19: 0x0000000100b7093c bitcoind`bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(__args=0x0000000101c37298, __args=0x00000001701612c0, __args=0x0000000170161e00, __args=0x0000000170161247) at invoke.h:478:16
    frame #20: 0x0000000100b708bc bitcoind`std::__1::__function::__alloc_func<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()[abi:v160006](this=0x0000000101c37298, __arg=0x00000001701612c0, __arg=0x0000000170161e00, __arg=0x0000000170161247) at function.h:185:16
    frame #21: 0x0000000100b6e254 bitcoind`std::__1::__function::__func<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(this=0x0000000101c37290, __arg=0x00000001701612c0, __arg=0x0000000170161e00, __arg=0x0000000170161247) at function.h:356:12
    frame #22: 0x00000001009abec8 bitcoind`std::__1::__function::__value_func<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()[abi:v160006](this=0x0000000101c37290, __args=0x00000001701612c0, __args=0x0000000170161e00, __args=0x0000000170161247) const at function.h:510:16
    frame #23: 0x00000001009abdac bitcoind`std::__1::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(this= Function = wallet::createwallet() , __arg=0x00000001701612c0, __arg=0x0000000170161e00, __arg=true) const at function.h:1156:12
    frame #24: 0x00000001010d5b94 bitcoind`wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs(this=0x00006000023c1648, request=0x00000001701618b0, result=0x0000000170161e00, last_handler=true)::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const at interfaces.cpp:564:24
    frame #25: 0x00000001010d5ac0 bitcoind`decltype(std::declval<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&>()(std::declval<JSONRPCRequest const&>(), std::declval<UniValue&>(), std::declval<bool>())) std::__1::__invoke[abi:v160006]<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(__f=0x00006000023c1648, __args=0x00000001701618b0, __args=0x0000000170161e00, __args=0x0000000170161597) at invoke.h:394:23
    frame #26: 0x00000001010d59d4 bitcoind`bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(__args=0x00006000023c1648, __args=0x00000001701618b0, __args=0x0000000170161e00, __args=0x0000000170161597) at invoke.h:478:16
    frame #27: 0x00000001010d5954 bitcoind`std::__1::__function::__alloc_func<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()[abi:v160006](this=0x00006000023c1648, __arg=0x00000001701618b0, __arg=0x0000000170161e00, __arg=0x0000000170161597) at function.h:185:16
    frame #28: 0x00000001010d32e4 bitcoind`std::__1::__function::__func<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(this=0x00006000023c1640, __arg=0x00000001701618b0, __arg=0x0000000170161e00, __arg=0x0000000170161597) at function.h:356:12
    frame #29: 0x00000001009abec8 bitcoind`std::__1::__function::__value_func<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()[abi:v160006](this=0x00006000023c1640, __args=0x00000001701618b0, __args=0x0000000170161e00, __args=0x0000000170161597) const at function.h:510:16
    frame #30: 0x00000001009abdac bitcoind`std::__1::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(this= Lambda in File interfaces.cpp at Line 561, __arg=0x00000001701618b0, __arg=0x0000000170161e00, __arg=true) const at function.h:1156:12
    frame #31: 0x00000001009abbe0 bitcoind`node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(this=0x00006000023c17c0, request=0x00000001701618b0, result=0x0000000170161e00, last_handler=true)::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const at interfaces.cpp:513:24
    frame #32: 0x00000001009abb18 bitcoind`decltype(std::declval<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&>()(std::declval<JSONRPCRequest const&>(), std::declval<UniValue&>(), std::declval<bool>())) std::__1::__invoke[abi:v160006]<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(__f=0x00006000023c17c0, __args=0x00000001701618b0, __args=0x0000000170161e00, __args=0x00000001701617d7) at invoke.h:394:23
    frame #33: 0x00000001009aba2c bitcoind`bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(__args=0x00006000023c17c0, __args=0x00000001701618b0, __args=0x0000000170161e00, __args=0x00000001701617d7) at invoke.h:478:16
    frame #34: 0x00000001009ab9ac bitcoind`std::__1::__function::__alloc_func<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()[abi:v160006](this=0x00006000023c17c0, __arg=0x00000001701618b0, __arg=0x0000000170161e00, __arg=0x00000001701617d7) at function.h:185:16
    frame #35: 0x00000001009a931c bitcoind`std::__1::__function::__func<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(this=0x00006000023c17b8, __arg=0x00000001701618b0, __arg=0x0000000170161e00, __arg=0x00000001701617d7) at function.h:356:12
    frame #36: 0x00000001009abec8 bitcoind`std::__1::__function::__value_func<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()[abi:v160006](this=0x00006000023c17b8, __args=0x00000001701618b0, __args=0x0000000170161e00, __args=0x00000001701617d7) const at function.h:510:16
    frame #37: 0x00000001009abdac bitcoind`std::__1::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(this= Lambda in File interfaces.cpp at Line 510, __arg=0x00000001701618b0, __arg=0x0000000170161e00, __arg=true) const at function.h:1156:12
    frame #38: 0x0000000100dfd188 bitcoind`ExecuteCommand(command=0x00006000023c1788, request=0x0000000170162b10, result=0x0000000170161e00, last_handler=true) at server.cpp:514:20
    frame #39: 0x0000000100de25f8 bitcoind`ExecuteCommands(commands=size=1, request=0x0000000170162b10, result=0x0000000170161e00) at server.cpp:481:13
    frame #40: 0x0000000100de2334 bitcoind`CRPCTable::execute(this=0x0000000101c39b88, request=0x0000000170162b10) const at server.cpp:501:13
    frame #41: 0x0000000100de1df4 bitcoind`JSONRPCExec(jreq=0x0000000170162b10, catch_errors=true) at server.cpp:357:31
    frame #42: 0x00000001004ecacc bitcoind`HTTPReq_JSONRPC(context=0x00006000003d58f8, req=0x0000600000dd1220) at httprpc.cpp:204:21
    frame #43: 0x00000001004ec280 bitcoind`StartHTTPRPC(std::__1::any const&)::$_0::operator()(this=0x00006000003d58f8, req=0x0000600000dd1220, (null)="") const at httprpc.cpp:376:80
    frame #44: 0x00000001004ec20c bitcoind`decltype(std::declval<StartHTTPRPC(std::__1::any const&)::$_0&>()(std::declval<HTTPRequest*>(), std::declval<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&>())) std::__1::__invoke[abi:v160006]<StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&>(__f=0x00006000003d58f8, __args=0x0000000170162e10, __args="") at invoke.h:394:23
    frame #45: 0x00000001004ec12c bitcoind`bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&>(__args=0x00006000003d58f8, __args=0x0000000170162e10, __args="") at invoke.h:478:16
    frame #46: 0x00000001004ec0b4 bitcoind`std::__1::__function::__alloc_func<StartHTTPRPC(std::__1::any const&)::$_0, std::__1::allocator<StartHTTPRPC(std::__1::any const&)::$_0>, bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)>::operator()[abi:v160006](this=0x00006000003d58f8, __arg=0x0000000170162e10, __arg="") at function.h:185:16
    frame #47: 0x00000001004e9a98 bitcoind`std::__1::__function::__func<StartHTTPRPC(std::__1::any const&)::$_0, std::__1::allocator<StartHTTPRPC(std::__1::any const&)::$_0>, bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)>::operator()(this=0x00006000003d58f0, __arg=0x0000000170162e10, __arg="") at function.h:356:12
    frame #48: 0x000000010050c154 bitcoind`std::__1::__function::__value_func<bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)>::operator()[abi:v160006](this=0x0000600002edc618, __args=0x0000000170162e10, __args="") const at function.h:510:16
    frame #49: 0x000000010050c048 bitcoind`std::__1::function<bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)>::operator()(this= Lambda in File httprpc.cpp at Line 376, __arg=0x0000600000dd1220, __arg="") const at function.h:1156:12
    frame #50: 0x000000010050bcac bitcoind`HTTPWorkItem::operator()(this=0x0000600002edc5f0) at httpserver.cpp:62:9
    frame #51: 0x000000010051f51c bitcoind`WorkQueue<HTTPClosure>::Run(this=0x0000600003ac4000) at httpserver.cpp:117:13
    frame #52: 0x00000001004f8958 bitcoind`HTTPWorkQueueRun(queue=0x0000600003ac4000, worker_num=10) at httpserver.cpp:419:12
    frame #53: 0x000000010051c454 bitcoind`decltype(std::declval<void (*)(WorkQueue<HTTPClosure>*, int)>()(std::declval<WorkQueue<HTTPClosure>*>(), std::declval<int>())) std::__1::__invoke[abi:v160006]<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>(__f=0x0000600000dc8288, __args=0x0000600000dc8290, __args=0x0000600000dc8298) at invoke.h:394:23
    frame #54: 0x000000010051c310 bitcoind`void std::__1::__thread_execute[abi:v160006]<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int, 2ul, 3ul>(__t=size=4, (null)=__tuple_indices<2UL, 3UL> @ 0x0000000170162f77) at thread:282:5
    frame #55: 0x000000010051b2cc bitcoind`void* std::__1::__thread_proxy[abi:v160006]<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>>(__vp=0x0000600000dc8280) at thread:293:5
    frame #56: 0x000000018858f2e4 libsystem_pthread.dylib`_pthread_start + 136
---------------------------
second INSERT or REPLACE
(lldb) bt
* thread #14, name = 'b-httpworker.10', stop reason = breakpoint 1.1
  * frame #0: 0x00000001013800e0 bitcoind`wallet::TraceSqlCallback(code=1, context=0x00006000029c5aa0, param1=0x0000000118205ae0, param2=0x000000011820f5e0) at sqlite.cpp:59:18
    frame #1: 0x000000018f7ec4f8 libsqlite3.dylib`sqlite3VdbeExec + 32220
    frame #2: 0x000000018f7e3de4 libsqlite3.dylib`sqlite3_step + 964
    frame #3: 0x0000000101382214 bitcoind`wallet::SQLiteBatch::WriteKey(this=0x0000600002ed3b60, key=0x000000017015e770, value=0x000000017015e750, overwrite=true) at sqlite.cpp:513:15
    frame #4: 0x000000010148d6f0 bitcoind`bool wallet::DatabaseBatch::Write<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, int>(this=0x0000600002ed3b60, key="minversion", value=0x000000017015e804, fOverwrite=true) at db.h:95:16
    frame #5: 0x0000000101487c5c bitcoind`bool wallet::WalletBatch::WriteIC<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, int>(this=0x0000600000dd8000, key="minversion", value=0x000000017015e804, fOverwrite=true) at walletdb.h:195:23
    frame #6: 0x0000000101487bcc bitcoind`wallet::WalletBatch::WriteMinVersion(this=0x0000600000dd8000, nVersion=169900) at walletdb.cpp:204:12
    frame #7: 0x0000000101399ed0 bitcoind`wallet::CWallet::SetMinVersion(this=0x000000013386b400, nVersion=FEATURE_PRE_SPLIT_KEYPOOL, batch_in=0x0000000000000000) at wallet.cpp:653:20
    frame #8: 0x0000000101393a14 bitcoind`wallet::CWallet::Create(context=0x00006000034c10a8, name="hww_disconnect", database=nullptr, wallet_creation_flags=55834574848, error=0x0000000170160850, warnings=size=0) at wallet.cpp:2870:25
    frame #9: 0x00000001013929ac bitcoind`wallet::CreateWallet(context=0x00006000034c10a8, name="hww_disconnect", load_on_start= Has Value=false , options=0x0000000170160938, status=0x0000000170160884, error=0x0000000170160850, warnings=size=0) at wallet.cpp:416:39
    frame #10: 0x0000000101279a60 bitcoind`wallet::createwallet()::$_0::operator()(this=0x0000000170161028, self=0x0000000170161008, request=0x00000001701612c0) const at wallet.cpp:423:45
    frame #11: 0x00000001012794c0 bitcoind`decltype(std::declval<wallet::createwallet()::$_0&>()(std::declval<RPCHelpMan const&>(), std::declval<JSONRPCRequest const&>())) std::__1::__invoke[abi:v160006]<wallet::createwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&>(__f=0x0000000170161028, __args=0x0000000170161008, __args=0x00000001701612c0) at invoke.h:394:23
    frame #12: 0x00000001012793e8 bitcoind`UniValue std::__1::__invoke_void_return_wrapper<UniValue, false>::__call<wallet::createwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&>(__args=0x0000000170161028, __args=0x0000000170161008, __args=0x00000001701612c0) at invoke.h:478:16
    frame #13: 0x0000000101279374 bitcoind`std::__1::__function::__alloc_func<wallet::createwallet()::$_0, std::__1::allocator<wallet::createwallet()::$_0>, UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()[abi:v160006](this=0x0000000170161028, __arg=0x0000000170161008, __arg=0x00000001701612c0) at function.h:185:16
    frame #14: 0x0000000101276d2c bitcoind`std::__1::__function::__func<wallet::createwallet()::$_0, std::__1::allocator<wallet::createwallet()::$_0>, UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(this=0x0000000170161020, __arg=0x0000000170161008, __arg=0x00000001701612c0) at function.h:356:12
    frame #15: 0x00000001016d68ec bitcoind`std::__1::__function::__value_func<UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()[abi:v160006](this=0x0000000170161020, __args=0x0000000170161008, __args=0x00000001701612c0) const at function.h:510:16
    frame #16: 0x00000001016c03ec bitcoind`std::__1::function<UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(this= Lambda in File wallet.cpp at Line 379, __arg=0x0000000170161008, __arg=0x00000001701612c0) const at function.h:1156:12
    frame #17: 0x00000001016beee4 bitcoind`RPCHelpMan::HandleRequest(this=0x0000000170161008, request=0x00000001701612c0) const at util.cpp:663:20
    frame #18: 0x0000000100b70ac0 bitcoind`CRPCCommand::CRPCCommand(this=0x0000000101c37298, request=0x00000001701612c0, result=0x0000000170161e00, (null)=true)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const at server.h:101:91
    frame #19: 0x0000000100b70a28 bitcoind`decltype(std::declval<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&>()(std::declval<JSONRPCRequest const&>(), std::declval<UniValue&>(), std::declval<bool>())) std::__1::__invoke[abi:v160006]<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(__f=0x0000000101c37298, __args=0x00000001701612c0, __args=0x0000000170161e00, __args=0x0000000170161247) at invoke.h:394:23
    frame #20: 0x0000000100b7093c bitcoind`bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(__args=0x0000000101c37298, __args=0x00000001701612c0, __args=0x0000000170161e00, __args=0x0000000170161247) at invoke.h:478:16
    frame #21: 0x0000000100b708bc bitcoind`std::__1::__function::__alloc_func<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()[abi:v160006](this=0x0000000101c37298, __arg=0x00000001701612c0, __arg=0x0000000170161e00, __arg=0x0000000170161247) at function.h:185:16
    frame #22: 0x0000000100b6e254 bitcoind`std::__1::__function::__func<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(this=0x0000000101c37290, __arg=0x00000001701612c0, __arg=0x0000000170161e00, __arg=0x0000000170161247) at function.h:356:12
    frame #23: 0x00000001009abec8 bitcoind`std::__1::__function::__value_func<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()[abi:v160006](this=0x0000000101c37290, __args=0x00000001701612c0, __args=0x0000000170161e00, __args=0x0000000170161247) const at function.h:510:16
    frame #24: 0x00000001009abdac bitcoind`std::__1::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(this= Function = wallet::createwallet() , __arg=0x00000001701612c0, __arg=0x0000000170161e00, __arg=true) const at function.h:1156:12
    frame #25: 0x00000001010d5b94 bitcoind`wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs(this=0x00006000023c1648, request=0x00000001701618b0, result=0x0000000170161e00, last_handler=true)::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const at interfaces.cpp:564:24
    frame #26: 0x00000001010d5ac0 bitcoind`decltype(std::declval<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&>()(std::declval<JSONRPCRequest const&>(), std::declval<UniValue&>(), std::declval<bool>())) std::__1::__invoke[abi:v160006]<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(__f=0x00006000023c1648, __args=0x00000001701618b0, __args=0x0000000170161e00, __args=0x0000000170161597) at invoke.h:394:23
    frame #27: 0x00000001010d59d4 bitcoind`bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(__args=0x00006000023c1648, __args=0x00000001701618b0, __args=0x0000000170161e00, __args=0x0000000170161597) at invoke.h:478:16
    frame #28: 0x00000001010d5954 bitcoind`std::__1::__function::__alloc_func<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()[abi:v160006](this=0x00006000023c1648, __arg=0x00000001701618b0, __arg=0x0000000170161e00, __arg=0x0000000170161597) at function.h:185:16
    frame #29: 0x00000001010d32e4 bitcoind`std::__1::__function::__func<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(this=0x00006000023c1640, __arg=0x00000001701618b0, __arg=0x0000000170161e00, __arg=0x0000000170161597) at function.h:356:12
    frame #30: 0x00000001009abec8 bitcoind`std::__1::__function::__value_func<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()[abi:v160006](this=0x00006000023c1640, __args=0x00000001701618b0, __args=0x0000000170161e00, __args=0x0000000170161597) const at function.h:510:16
    frame #31: 0x00000001009abdac bitcoind`std::__1::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(this= Lambda in File interfaces.cpp at Line 561, __arg=0x00000001701618b0, __arg=0x0000000170161e00, __arg=true) const at function.h:1156:12
    frame #32: 0x00000001009abbe0 bitcoind`node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(this=0x00006000023c17c0, request=0x00000001701618b0, result=0x0000000170161e00, last_handler=true)::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const at interfaces.cpp:513:24
    frame #33: 0x00000001009abb18 bitcoind`decltype(std::declval<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&>()(std::declval<JSONRPCRequest const&>(), std::declval<UniValue&>(), std::declval<bool>())) std::__1::__invoke[abi:v160006]<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(__f=0x00006000023c17c0, __args=0x00000001701618b0, __args=0x0000000170161e00, __args=0x00000001701617d7) at invoke.h:394:23
    frame #34: 0x00000001009aba2c bitcoind`bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(__args=0x00006000023c17c0, __args=0x00000001701618b0, __args=0x0000000170161e00, __args=0x00000001701617d7) at invoke.h:478:16
    frame #35: 0x00000001009ab9ac bitcoind`std::__1::__function::__alloc_func<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()[abi:v160006](this=0x00006000023c17c0, __arg=0x00000001701618b0, __arg=0x0000000170161e00, __arg=0x00000001701617d7) at function.h:185:16
    frame #36: 0x00000001009a931c bitcoind`std::__1::__function::__func<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(this=0x00006000023c17b8, __arg=0x00000001701618b0, __arg=0x0000000170161e00, __arg=0x00000001701617d7) at function.h:356:12
    frame #37: 0x00000001009abec8 bitcoind`std::__1::__function::__value_func<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()[abi:v160006](this=0x00006000023c17b8, __args=0x00000001701618b0, __args=0x0000000170161e00, __args=0x00000001701617d7) const at function.h:510:16
    frame #38: 0x00000001009abdac bitcoind`std::__1::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(this= Lambda in File interfaces.cpp at Line 510, __arg=0x00000001701618b0, __arg=0x0000000170161e00, __arg=true) const at function.h:1156:12
    frame #39: 0x0000000100dfd188 bitcoind`ExecuteCommand(command=0x00006000023c1788, request=0x0000000170162b10, result=0x0000000170161e00, last_handler=true) at server.cpp:514:20
    frame #40: 0x0000000100de25f8 bitcoind`ExecuteCommands(commands=size=1, request=0x0000000170162b10, result=0x0000000170161e00) at server.cpp:481:13
    frame #41: 0x0000000100de2334 bitcoind`CRPCTable::execute(this=0x0000000101c39b88, request=0x0000000170162b10) const at server.cpp:501:13
    frame #42: 0x0000000100de1df4 bitcoind`JSONRPCExec(jreq=0x0000000170162b10, catch_errors=true) at server.cpp:357:31
    frame #43: 0x00000001004ecacc bitcoind`HTTPReq_JSONRPC(context=0x00006000003d58f8, req=0x0000600000dd1220) at httprpc.cpp:204:21
    frame #44: 0x00000001004ec280 bitcoind`StartHTTPRPC(std::__1::any const&)::$_0::operator()(this=0x00006000003d58f8, req=0x0000600000dd1220, (null)="") const at httprpc.cpp:376:80
    frame #45: 0x00000001004ec20c bitcoind`decltype(std::declval<StartHTTPRPC(std::__1::any const&)::$_0&>()(std::declval<HTTPRequest*>(), std::declval<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&>())) std::__1::__invoke[abi:v160006]<StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&>(__f=0x00006000003d58f8, __args=0x0000000170162e10, __args="") at invoke.h:394:23
    frame #46: 0x00000001004ec12c bitcoind`bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&>(__args=0x00006000003d58f8, __args=0x0000000170162e10, __args="") at invoke.h:478:16
    frame #47: 0x00000001004ec0b4 bitcoind`std::__1::__function::__alloc_func<StartHTTPRPC(std::__1::any const&)::$_0, std::__1::allocator<StartHTTPRPC(std::__1::any const&)::$_0>, bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)>::operator()[abi:v160006](this=0x00006000003d58f8, __arg=0x0000000170162e10, __arg="") at function.h:185:16
    frame #48: 0x00000001004e9a98 bitcoind`std::__1::__function::__func<StartHTTPRPC(std::__1::any const&)::$_0, std::__1::allocator<StartHTTPRPC(std::__1::any const&)::$_0>, bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)>::operator()(this=0x00006000003d58f0, __arg=0x0000000170162e10, __arg="") at function.h:356:12
    frame #49: 0x000000010050c154 bitcoind`std::__1::__function::__value_func<bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)>::operator()[abi:v160006](this=0x0000600002edc618, __args=0x0000000170162e10, __args="") const at function.h:510:16
    frame #50: 0x000000010050c048 bitcoind`std::__1::function<bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)>::operator()(this= Lambda in File httprpc.cpp at Line 376, __arg=0x0000600000dd1220, __arg="") const at function.h:1156:12
    frame #51: 0x000000010050bcac bitcoind`HTTPWorkItem::operator()(this=0x0000600002edc5f0) at httpserver.cpp:62:9
    frame #52: 0x000000010051f51c bitcoind`WorkQueue<HTTPClosure>::Run(this=0x0000600003ac4000) at httpserver.cpp:117:13
    frame #53: 0x00000001004f8958 bitcoind`HTTPWorkQueueRun(queue=0x0000600003ac4000, worker_num=10) at httpserver.cpp:419:12
    frame #54: 0x000000010051c454 bitcoind`decltype(std::declval<void (*)(WorkQueue<HTTPClosure>*, int)>()(std::declval<WorkQueue<HTTPClosure>*>(), std::declval<int>())) std::__1::__invoke[abi:v160006]<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>(__f=0x0000600000dc8288, __args=0x0000600000dc8290, __args=0x0000600000dc8298) at invoke.h:394:23
    frame #55: 0x000000010051c310 bitcoind`void std::__1::__thread_execute[abi:v160006]<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int, 2ul, 3ul>(__t=size=4, (null)=__tuple_indices<2UL, 3UL> @ 0x0000000170162f77) at thread:282:5
    frame #56: 0x000000010051b2cc bitcoind`void* std::__1::__thread_proxy[abi:v160006]<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>>(__vp=0x0000600000dc8280) at thread:293:5
    frame #57: 0x000000018858f2e4 libsystem_pthread.dylib`_pthread_start + 136 
---------------------------
(lldb) print DEBUG_STR
(const char *) $0 = 0x00000001200f7ee0 "BEGIN TRANSACTION"
(lldb) bt
* thread #14, name = 'b-httpworker.10', stop reason = breakpoint 1.1
  * frame #0: 0x0000000102ffc140 bitcoind`wallet::TraceSqlCallback(code=1, context=0x00006000008dd260, param1=0x00000001200eba10, param2=0x00000001200f7ee0) at sqlite.cpp:58:18
    frame #1: 0x000000018f7ec4f8 libsqlite3.dylib`sqlite3VdbeExec + 32220
    frame #2: 0x000000018f7e3de4 libsqlite3.dylib`sqlite3_step + 964
    frame #3: 0x000000018f7bcc9c libsqlite3.dylib`sqlite3_exec + 1964
    frame #4: 0x0000000102ffc9ec bitcoind`wallet::SQliteExecHandler::Exec(this=0x0000600002ec50d0, database=0x00006000008dd260, statement="BEGIN TRANSACTION") at sqlite.cpp:395:12
    frame #5: 0x00000001030007b4 bitcoind`wallet::SQLiteBatch::TxnBegin(this=0x0000600000ff0af0) at sqlite.cpp:661:39
    frame #6: 0x000000010310a730 bitcoind`wallet::WalletBatch::TxnBegin(this=0x000000016e4e26d0) at walletdb.cpp:1289:21
    frame #7: 0x0000000103013138 bitcoind`wallet::CWallet::SetupDescriptorScriptPubKeyMans(this=0x000000013e01b200) at wallet.cpp:3569:20
    frame #8: 0x000000010300faec bitcoind`wallet::CWallet::Create(context=0x00006000015d0008, name="hww_disconnect", database=nullptr, wallet_creation_flags=55834574848, error=0x000000016e4e4850, warnings=size=0) at wallet.cpp:2880:29
    frame #9: 0x000000010300e9cc bitcoind`wallet::CreateWallet(context=0x00006000015d0008, name="hww_disconnect", load_on_start= Has Value=false , options=0x000000016e4e4938, status=0x000000016e4e4884, error=0x000000016e4e4850, warnings=size=0) at wallet.cpp:416:39
    frame #10: 0x0000000102ef5acc bitcoind`wallet::createwallet()::$_0::operator()(this=0x000000016e4e5028, self=0x000000016e4e5008, request=0x000000016e4e52c0) const at wallet.cpp:423:45
    frame #11: 0x0000000102ef552c bitcoind`decltype(std::declval<wallet::createwallet()::$_0&>()(std::declval<RPCHelpMan const&>(), std::declval<JSONRPCRequest const&>())) std::__1::__invoke[abi:v160006]<wallet::createwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&>(__f=0x000000016e4e5028, __args=0x000000016e4e5008, __args=0x000000016e4e52c0) at invoke.h:394:23
    frame #12: 0x0000000102ef5454 bitcoind`UniValue std::__1::__invoke_void_return_wrapper<UniValue, false>::__call<wallet::createwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&>(__args=0x000000016e4e5028, __args=0x000000016e4e5008, __args=0x000000016e4e52c0) at invoke.h:478:16
    frame #13: 0x0000000102ef53e0 bitcoind`std::__1::__function::__alloc_func<wallet::createwallet()::$_0, std::__1::allocator<wallet::createwallet()::$_0>, UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()[abi:v160006](this=0x000000016e4e5028, __arg=0x000000016e4e5008, __arg=0x000000016e4e52c0) at function.h:185:16
    frame #14: 0x0000000102ef2d98 bitcoind`std::__1::__function::__func<wallet::createwallet()::$_0, std::__1::allocator<wallet::createwallet()::$_0>, UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(this=0x000000016e4e5020, __arg=0x000000016e4e5008, __arg=0x000000016e4e52c0) at function.h:356:12
    frame #15: 0x000000010335290c bitcoind`std::__1::__function::__value_func<UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()[abi:v160006](this=0x000000016e4e5020, __args=0x000000016e4e5008, __args=0x000000016e4e52c0) const at function.h:510:16
    frame #16: 0x000000010333c40c bitcoind`std::__1::function<UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(this= Lambda in File wallet.cpp at Line 379, __arg=0x000000016e4e5008, __arg=0x000000016e4e52c0) const at function.h:1156:12
    frame #17: 0x000000010333af04 bitcoind`RPCHelpMan::HandleRequest(this=0x000000016e4e5008, request=0x000000016e4e52c0) const at util.cpp:663:20
    frame #18: 0x00000001027ecb2c bitcoind`CRPCCommand::CRPCCommand(this=0x00000001038b3298, request=0x000000016e4e52c0, result=0x000000016e4e5e00, (null)=true)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const at server.h:101:91
    frame #19: 0x00000001027eca94 bitcoind`decltype(std::declval<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&>()(std::declval<JSONRPCRequest const&>(), std::declval<UniValue&>(), std::declval<bool>())) std::__1::__invoke[abi:v160006]<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(__f=0x00000001038b3298, __args=0x000000016e4e52c0, __args=0x000000016e4e5e00, __args=0x000000016e4e5247) at invoke.h:394:23
    frame #20: 0x00000001027ec9a8 bitcoind`bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(__args=0x00000001038b3298, __args=0x000000016e4e52c0, __args=0x000000016e4e5e00, __args=0x000000016e4e5247) at invoke.h:478:16
    frame #21: 0x00000001027ec928 bitcoind`std::__1::__function::__alloc_func<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()[abi:v160006](this=0x00000001038b3298, __arg=0x000000016e4e52c0, __arg=0x000000016e4e5e00, __arg=0x000000016e4e5247) at function.h:185:16
    frame #22: 0x00000001027ea2c0 bitcoind`std::__1::__function::__func<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(this=0x00000001038b3290, __arg=0x000000016e4e52c0, __arg=0x000000016e4e5e00, __arg=0x000000016e4e5247) at function.h:356:12
    frame #23: 0x0000000102627f34 bitcoind`std::__1::__function::__value_func<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()[abi:v160006](this=0x00000001038b3290, __args=0x000000016e4e52c0, __args=0x000000016e4e5e00, __args=0x000000016e4e5247) const at function.h:510:16
    frame #24: 0x0000000102627e18 bitcoind`std::__1::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(this= Function = wallet::createwallet() , __arg=0x000000016e4e52c0, __arg=0x000000016e4e5e00, __arg=true) const at function.h:1156:12
    frame #25: 0x0000000102d51c00 bitcoind`wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs(this=0x00006000002dcac8, request=0x000000016e4e58b0, result=0x000000016e4e5e00, last_handler=true)::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const at interfaces.cpp:564:24
    frame #26: 0x0000000102d51b2c bitcoind`decltype(std::declval<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&>()(std::declval<JSONRPCRequest const&>(), std::declval<UniValue&>(), std::declval<bool>())) std::__1::__invoke[abi:v160006]<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(__f=0x00006000002dcac8, __args=0x000000016e4e58b0, __args=0x000000016e4e5e00, __args=0x000000016e4e5597) at invoke.h:394:23
    frame #27: 0x0000000102d51a40 bitcoind`bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(__args=0x00006000002dcac8, __args=0x000000016e4e58b0, __args=0x000000016e4e5e00, __args=0x000000016e4e5597) at invoke.h:478:16
    frame #28: 0x0000000102d519c0 bitcoind`std::__1::__function::__alloc_func<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()[abi:v160006](this=0x00006000002dcac8, __arg=0x000000016e4e58b0, __arg=0x000000016e4e5e00, __arg=0x000000016e4e5597) at function.h:185:16
    frame #29: 0x0000000102d4f350 bitcoind`std::__1::__function::__func<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(this=0x00006000002dcac0, __arg=0x000000016e4e58b0, __arg=0x000000016e4e5e00, __arg=0x000000016e4e5597) at function.h:356:12
    frame #30: 0x0000000102627f34 bitcoind`std::__1::__function::__value_func<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()[abi:v160006](this=0x00006000002dcac0, __args=0x000000016e4e58b0, __args=0x000000016e4e5e00, __args=0x000000016e4e5597) const at function.h:510:16
    frame #31: 0x0000000102627e18 bitcoind`std::__1::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(this= Lambda in File interfaces.cpp at Line 561, __arg=0x000000016e4e58b0, __arg=0x000000016e4e5e00, __arg=true) const at function.h:1156:12
    frame #32: 0x0000000102627c4c bitcoind`node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(this=0x00006000002dcc40, request=0x000000016e4e58b0, result=0x000000016e4e5e00, last_handler=true)::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const at interfaces.cpp:513:24
    frame #33: 0x0000000102627b84 bitcoind`decltype(std::declval<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&>()(std::declval<JSONRPCRequest const&>(), std::declval<UniValue&>(), std::declval<bool>())) std::__1::__invoke[abi:v160006]<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(__f=0x00006000002dcc40, __args=0x000000016e4e58b0, __args=0x000000016e4e5e00, __args=0x000000016e4e57d7) at invoke.h:394:23
    frame #34: 0x0000000102627a98 bitcoind`bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(__args=0x00006000002dcc40, __args=0x000000016e4e58b0, __args=0x000000016e4e5e00, __args=0x000000016e4e57d7) at invoke.h:478:16
    frame #35: 0x0000000102627a18 bitcoind`std::__1::__function::__alloc_func<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()[abi:v160006](this=0x00006000002dcc40, __arg=0x000000016e4e58b0, __arg=0x000000016e4e5e00, __arg=0x000000016e4e57d7) at function.h:185:16
    frame #36: 0x0000000102625388 bitcoind`std::__1::__function::__func<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(this=0x00006000002dcc38, __arg=0x000000016e4e58b0, __arg=0x000000016e4e5e00, __arg=0x000000016e4e57d7) at function.h:356:12
    frame #37: 0x0000000102627f34 bitcoind`std::__1::__function::__value_func<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()[abi:v160006](this=0x00006000002dcc38, __args=0x000000016e4e58b0, __args=0x000000016e4e5e00, __args=0x000000016e4e57d7) const at function.h:510:16
    frame #38: 0x0000000102627e18 bitcoind`std::__1::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(this= Lambda in File interfaces.cpp at Line 510, __arg=0x000000016e4e58b0, __arg=0x000000016e4e5e00, __arg=true) const at function.h:1156:12
    frame #39: 0x0000000102a791f4 bitcoind`ExecuteCommand(command=0x00006000002dcc08, request=0x000000016e4e6b10, result=0x000000016e4e5e00, last_handler=true) at server.cpp:514:20
    frame #40: 0x0000000102a5e664 bitcoind`ExecuteCommands(commands=size=1, request=0x000000016e4e6b10, result=0x000000016e4e5e00) at server.cpp:481:13
    frame #41: 0x0000000102a5e3a0 bitcoind`CRPCTable::execute(this=0x00000001038b5b88, request=0x000000016e4e6b10) const at server.cpp:501:13
    frame #42: 0x0000000102a5de60 bitcoind`JSONRPCExec(jreq=0x000000016e4e6b10, catch_errors=true) at server.cpp:357:31
    frame #43: 0x0000000102168b38 bitcoind`HTTPReq_JSONRPC(context=0x00006000022df518, req=0x0000600002cdbf60) at httprpc.cpp:204:21
    frame #44: 0x00000001021682ec bitcoind`StartHTTPRPC(std::__1::any const&)::$_0::operator()(this=0x00006000022df518, req=0x0000600002cdbf60, (null)="") const at httprpc.cpp:376:80
    frame #45: 0x0000000102168278 bitcoind`decltype(std::declval<StartHTTPRPC(std::__1::any const&)::$_0&>()(std::declval<HTTPRequest*>(), std::declval<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&>())) std::__1::__invoke[abi:v160006]<StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&>(__f=0x00006000022df518, __args=0x000000016e4e6e10, __args="") at invoke.h:394:23
    frame #46: 0x0000000102168198 bitcoind`bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&>(__args=0x00006000022df518, __args=0x000000016e4e6e10, __args="") at invoke.h:478:16
    frame #47: 0x0000000102168120 bitcoind`std::__1::__function::__alloc_func<StartHTTPRPC(std::__1::any const&)::$_0, std::__1::allocator<StartHTTPRPC(std::__1::any const&)::$_0>, bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)>::operator()[abi:v160006](this=0x00006000022df518, __arg=0x000000016e4e6e10, __arg="") at function.h:185:16
    frame #48: 0x0000000102165b04 bitcoind`std::__1::__function::__func<StartHTTPRPC(std::__1::any const&)::$_0, std::__1::allocator<StartHTTPRPC(std::__1::any const&)::$_0>, bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)>::operator()(this=0x00006000022df510, __arg=0x000000016e4e6e10, __arg="") at function.h:356:12
    frame #49: 0x00000001021881c0 bitcoind`std::__1::__function::__value_func<bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)>::operator()[abi:v160006](this=0x0000600000fc9158, __args=0x000000016e4e6e10, __args="") const at function.h:510:16
    frame #50: 0x00000001021880b4 bitcoind`std::__1::function<bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)>::operator()(this= Lambda in File httprpc.cpp at Line 376, __arg=0x0000600002cdbf60, __arg="") const at function.h:1156:12
    frame #51: 0x0000000102187d18 bitcoind`HTTPWorkItem::operator()(this=0x0000600000fc9130) at httpserver.cpp:62:9
    frame #52: 0x000000010219b588 bitcoind`WorkQueue<HTTPClosure>::Run(this=0x0000600001bd8000) at httpserver.cpp:117:13
    frame #53: 0x00000001021749c4 bitcoind`HTTPWorkQueueRun(queue=0x0000600001bd8000, worker_num=10) at httpserver.cpp:419:12
    frame #54: 0x00000001021984c0 bitcoind`decltype(std::declval<void (*)(WorkQueue<HTTPClosure>*, int)>()(std::declval<WorkQueue<HTTPClosure>*>(), std::declval<int>())) std::__1::__invoke[abi:v160006]<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>(__f=0x0000600002cd8368, __args=0x0000600002cd8370, __args=0x0000600002cd8378) at invoke.h:394:23
    frame #55: 0x000000010219837c bitcoind`void std::__1::__thread_execute[abi:v160006]<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int, 2ul, 3ul>(__t=size=4, (null)=__tuple_indices<2UL, 3UL> @ 0x000000016e4e6f77) at thread:282:5
    frame #56: 0x0000000102197338 bitcoind`void* std::__1::__thread_proxy[abi:v160006]<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>>(__vp=0x0000600002cd8360) at thread:293:5
    frame #57: 0x000000018858f2e4 libsystem_pthread.dylib`_pthread_start + 136
---------------------------
good test of thread httpworker.10:
2025-07-06T00:13:56.545701Z [httpworker.10] [wallet/sqlite.cpp:55] [TraceSqlCallback] [walletdb:trace] [/tmp/test_runner_₿_🏃_20250705_201353/wallet_signer_0/node1/regtest/hww_disconnect/wallet.dat] SQLite Statement: INSERT or REPLACE into main values(?, ?)
2025-07-06T00:13:56.545727Z [httpworker.10] [wallet/sqlite.cpp:55] [TraceSqlCallback] [walletdb:trace] [/tmp/test_runner_₿_🏃_20250705_201353/wallet_signer_0/node1/regtest/hww_disconnect/wallet.dat] SQLite Statement: INSERT or REPLACE into main values(?, ?)
2025-07-06T00:13:56.600413Z [httpworker.10] [wallet/sqlite.cpp:55] [TraceSqlCallback] [walletdb:trace] [/tmp/test_runner_₿_🏃_20250705_201353/wallet_signer_0/node1/regtest/hww_disconnect/wallet.dat] SQLite Statement: BEGIN TRANSACTION
...
2025-07-06T00:13:56.600944Z [httpworker.10] [wallet/wallet.h:942] [WalletLogPrintf] [hww_disconnect] Setting spkMan to active: id = 97ee5974a94c68abe72f1cccad937378037c1711c3cb7528501ba3534a201229, type = legacy, internal = false

bad ci.txt: no such log of "Setting spkMan", httpworker.8 didn't start "SQLite Statement: BEGIN TRANSACTION"
The last log about hww_disconnect is:
node1 2025-06-26T13:45:43.128865Z [httpworker.8] [wallet/wallet.h:931] [WalletLogPrintf] [hww_disconnect] Setting minversion to 169900
[10:05:43.853] ^[[0;32m node1 2025-06-26T13:45:43.128982Z [httpworker.8] [wallet/sqlite.cpp:55] [TraceSqlCallback] [walletdb:trace] [/ci_container_base/ci/scratch/test_runner/test_runner_₿_🏃_20250626_133646/wallet_signer_216/node1/regtest/hww_disconnect/wallet.dat] SQLite Statement: INSERT or REPLACE into main values(?, ?) ^[[0m
[10:05:43.853] ^[[0;32m node1 2025-06-26T13:45:43.129258Z [httpworker.8] [wallet/sqlite.cpp:55] [TraceSqlCallback] [walletdb:trace] [/ci_container_base/ci/scratch/test_runner/test_runner_₿_🏃_20250626_133646/wallet_signer_216/node1/regtest/hww_disconnect/wallet.dat] SQLite Statement: INSERT or REPLACE into main values(?, ?) ^[[0m

After 2 inserts, no 
---------------------------
